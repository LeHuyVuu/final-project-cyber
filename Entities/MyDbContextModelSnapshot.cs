// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cybersoft_final_project.Context;

#nullable disable

namespace cybersoft_final_project.Entities
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("cybersoft_final_project.Entities.category", b =>
                {
                    b.Property<int>("categoryid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("categoryname")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp");

                    b.Property<string>("image")
                        .HasColumnType("text");

                    b.HasKey("categoryid")
                        .HasName("PRIMARY");

                    b.ToTable("category");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.order", b =>
                {
                    b.Property<int>("orderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("orderdate")
                        .HasColumnType("timestamp");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("total")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("orderid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "userid" }, "userid");

                    b.ToTable("order");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.orderdetail", b =>
                {
                    b.Property<int>("detailid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("orderid")
                        .HasColumnType("int");

                    b.Property<decimal?>("price")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<int?>("productid")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("detailid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "orderid" }, "orderid");

                    b.HasIndex(new[] { "productid" }, "productid");

                    b.ToTable("orderdetail");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.product", b =>
                {
                    b.Property<int>("productid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("brand")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("categoryid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp");

                    b.Property<int?>("discount_percent")
                        .HasColumnType("int");

                    b.Property<decimal?>("discount_price")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("highlight")
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("importdate")
                        .HasColumnType("date");

                    b.Property<bool?>("is_available")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal?>("price")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("productname")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<float?>("rating_avg")
                        .HasColumnType("float(5,2)");

                    b.Property<int?>("rating_count")
                        .HasColumnType("int");

                    b.Property<string>("sku")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("sold_quantity")
                        .HasColumnType("int");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("stock_quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("usingdate")
                        .HasColumnType("date");

                    b.HasKey("productid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "categoryid" }, "categoryid");

                    b.ToTable("product");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.product_image", b =>
                {
                    b.Property<int>("imageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("image_url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.HasKey("imageid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "productid" }, "productid")
                        .HasDatabaseName("productid1");

                    b.ToTable("product_image");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.productattribute", b =>
                {
                    b.Property<int>("attributeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("attribute_name")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("attribute_value")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp");

                    b.Property<int?>("productid")
                        .HasColumnType("int");

                    b.HasKey("attributeid")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "productid" }, "productid")
                        .HasDatabaseName("productid2");

                    b.ToTable("productattribute");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.recommendation_product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<int>("recommendation_type_id")
                        .HasColumnType("int");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "productid" }, "productid")
                        .HasDatabaseName("productid3");

                    b.HasIndex(new[] { "recommendation_type_id" }, "recommendation_type_id");

                    b.ToTable("recommendation_product");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.recommendation_type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("slug_name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("slug-name");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.ToTable("recommendation_type");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.user", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("birthday")
                        .HasColumnType("date");

                    b.Property<string>("fullname")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("phone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("roleid")
                        .HasColumnType("int");

                    b.Property<bool?>("status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("userid")
                        .HasName("PRIMARY");

                    b.ToTable("users");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.order", b =>
                {
                    b.HasOne("cybersoft_final_project.Entities.user", "user")
                        .WithMany("orders")
                        .HasForeignKey("userid")
                        .HasConstraintName("order_ibfk_1");

                    b.Navigation("user");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.orderdetail", b =>
                {
                    b.HasOne("cybersoft_final_project.Entities.order", "order")
                        .WithMany("orderdetails")
                        .HasForeignKey("orderid")
                        .HasConstraintName("orderdetail_ibfk_1");

                    b.HasOne("cybersoft_final_project.Entities.product", "product")
                        .WithMany("orderdetails")
                        .HasForeignKey("productid")
                        .HasConstraintName("orderdetail_ibfk_2");

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.product", b =>
                {
                    b.HasOne("cybersoft_final_project.Entities.category", "category")
                        .WithMany("products")
                        .HasForeignKey("categoryid")
                        .HasConstraintName("product_ibfk_1");

                    b.Navigation("category");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.product_image", b =>
                {
                    b.HasOne("cybersoft_final_project.Entities.product", "product")
                        .WithMany("product_images")
                        .HasForeignKey("productid")
                        .IsRequired()
                        .HasConstraintName("product_image_ibfk_1");

                    b.Navigation("product");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.productattribute", b =>
                {
                    b.HasOne("cybersoft_final_project.Entities.product", "product")
                        .WithMany("productattributes")
                        .HasForeignKey("productid")
                        .HasConstraintName("productattribute_ibfk_1");

                    b.Navigation("product");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.recommendation_product", b =>
                {
                    b.HasOne("cybersoft_final_project.Entities.product", "product")
                        .WithMany("recommendation_products")
                        .HasForeignKey("productid")
                        .IsRequired()
                        .HasConstraintName("recommendation_product_ibfk_2");

                    b.HasOne("cybersoft_final_project.Entities.recommendation_type", "recommendation_type")
                        .WithMany("recommendation_products")
                        .HasForeignKey("recommendation_type_id")
                        .IsRequired()
                        .HasConstraintName("recommendation_product_ibfk_1");

                    b.Navigation("product");

                    b.Navigation("recommendation_type");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.category", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.order", b =>
                {
                    b.Navigation("orderdetails");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.product", b =>
                {
                    b.Navigation("orderdetails");

                    b.Navigation("product_images");

                    b.Navigation("productattributes");

                    b.Navigation("recommendation_products");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.recommendation_type", b =>
                {
                    b.Navigation("recommendation_products");
                });

            modelBuilder.Entity("cybersoft_final_project.Entities.user", b =>
                {
                    b.Navigation("orders");
                });
#pragma warning restore 612, 618
        }
    }
}
